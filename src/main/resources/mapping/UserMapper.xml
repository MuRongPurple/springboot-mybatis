<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.UserMapper">

    <!--主要用于将pojo与数据表中的字段映射起来，通常是一致的，可能会出现特殊情况-->
    <resultMap id="BaseResultMap" type="com.example.entity.User">
        <result column="user_id" jdbcType="INTEGER" property="userId" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="pass_word" jdbcType="VARCHAR" property="passWord" />
        <result column="real_name" jdbcType="VARCHAR" property="realName" />
    </resultMap>

    <select id="Sel"
            parameterType="int"
            resultType="com.example.entity.User">
        select * from user where user_id = #{id}
    </select>

    <select id="selectById"
            parameterType="int"
            resultMap="BaseResultMap">
        select * from user where user_id = #{id}
    </select>

    <insert id="insertUser"
        parameterType="com.example.entity.User">
        <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Integer">
            select LAST_INSERT_ID()
        </selectKey>
        insert into user(user_name,pass_word,real_name)
          values (#{userName},#{passWord},#{realName});
    </insert>

    <resultMap id="orderAndUserRstMap" type="com.example.entity.OrderUser">
        <id column="order_id" property="orderId"/>
        <result column="content" property="content"/>
        <result column="date" property="date"/>

        <association property="user" javaType="com.example.entity.User">
            <id column="user_id" property="userId"/>
            <result column="user_name" property="userName"/>
            <result column="pass_word" property="passWord"/>
            <result column="real_name" property="realName"/>
        </association>
    </resultMap>
    
    <select id="findOrdersAndUserRstMap" resultMap="orderAndUserRstMap">
        SELECT
        uo_o.*,`user`.`pass_word`,`user`.`real_name`,`user`.`user_name` FROM
        (SELECT o.*,uo.user_id FROM `orders` o LEFT JOIN `user_order` uo ON uo.`order_id` = o.order_id) uo_o
        LEFT JOIN `user`
        ON uo_o.user_id = `user`.`user_id`
    </select>

    <select id="findOrdersAndUserRstMapByOrderId" resultMap="orderAndUserRstMap" parameterType="int">
        SELECT
        uo_o.*,`user`.`pass_word`,`user`.`real_name`,`user`.`user_name` FROM
          (SELECT o.*,uo.user_id
          FROM `orders` o
          INNER JOIN `user_order` uo
          ON  o.order_id = #{orderId}
          AND uo.`order_id` = o.order_id )uo_o
        LEFT JOIN `user`
        ON uo_o.user_id = `user`.`user_id`
    </select>

    <resultMap id="userAndOrderRstMap" type="com.example.entity.UserOrder">
        <id column="user_id" property="userId"/>
        <result column="user_name" property="userName"/>
        <result column="pass_word" property="passWord"/>
        <result column="real_name" property="realName"/>
        <collection property="orderList" ofType="com.example.entity.Order">
            <id column="order_id" property="orderId"/>
            <result column="content" property="content"/>
            <result column="date" property="date"/>
        </collection>
    </resultMap>

    <select id="findUserAndOrderRstMapByUserId" resultMap="userAndOrderRstMap" parameterType="int">
        SELECT * FROM
        (SELECT `user`.*,`user_order`.`order_id`
          FROM `user`
          INNER JOIN `user_order`
          ON `user`.`user_id`=`user_order`.`user_id`
          AND `user`.`user_id`=#{userId}) u_uo
        LEFT JOIN `orders`
        ON `orders`.`order_id` = u_uo.`order_id`
    </select>

    <!--<insert id="insert" parameterType="com.example.entity.User">
        insert into User (userId, userName, phone,
        sex)
        values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
        #{sex,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.example.entity.User">
        insert into User
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userid != null">
                userId,
            </if>
            <if test="username != null">
                userName,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="sex != null">
                sex,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userid != null">
                #{userid,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="findAllUser" resultType="com.example.entity.User">
        select * from User
    </select>-->
</mapper>
